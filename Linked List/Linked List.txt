// What os Linked List?

Arrays:
- arrays are of fixed size - immutable
- once array is declared size cannot be changed
- arrays stores data sequentially in the memory
- data in array must be of same type

Linked List:
- Linked list is a collection of elements, where each element is represented as a node
- Node contain DATA and LINK, link contain a reference where the point 
- When the node is last item in the collection, the link will be null
- How we will access the collection of elements? This is done by link, which stores the memory addres of the nodes
- Linked list is not continuous data structure as arrays are. Arrays have elements side by side

- We are using the Linked lists for following reasons:

Problems with Arrays
- Arrays are of fixed size
- Arrays stores data sequentially in the memory
- we don't know how many elements we need to store


// Creating a Node of Linked List

Linked List:
- Add or delete any amount of elements in the data structure
- Efficient utilisation of memory
- NODE is a location in memory, they are not sequential
- Linked List contain head and tail, the head is of fixed position, otherwise we would lose the reference of the linked list beginning

// Playing with the links of Linked List



// How to create a linked list?
addlast - is used to create a node at last position, initially the list will be empty, so after we will create the first node, we will need to check if the
list is empty. If the list is empty, then head = newest, if the condition is false, then we will asign tail = newest, and we will increase the size of the linked list
size = size +1; if there is only one node in the linked list, then the head and tail would point to the first node.

// Displaying or Traversing Linked List
starting at head and using the .next reference we are traversing though the list, until we will reach the tail of the list
tail of the linked list contain a null as next reference.

